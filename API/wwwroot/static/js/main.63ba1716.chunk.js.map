{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/acitivity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/activities/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","Object","classCallCheck","this","PagingParams","pageNumber","arguments","length","undefined","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","concat","response","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","JSON","parse","abrupt","stop","_x","apply","error","_ref2","status","toast","hasOwnProperty","errors","modalStateErrors","key","method","history","push","flat","serverError","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","acitivity","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","Content-type","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowings","listFollowings","predicate","listActivities","Activity","init","assign","ActivityFormValues","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","_this","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","activityStore_regeneratorRuntime","result","setLoadingInitil","axiosParams","sent","setActivity","setPagination","t0","console","log","userStore","isGoing","attendees","some","a","isHost","hostUsername","host","find","x","Date","loadAtivity","_callee2","_context2","getActivity","runInAction","state","createActivity","_ref3","_callee3","attendee","newActivity","_context3","_x2","updateActivity","_ref4","_callee4","_context4","updatedActivity","objectSpread","_x3","deleteActivity","_ref5","_callee5","_context5","_x4","updateAttendance","_callee6","_context6","filter","finish","cancellActivityToggle","_callee7","_context7","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","followingCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","split","toConsumableArray","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","profileStore_regeneratorRuntime","photo","photos","isMain","setImage","p","setDisplayName","_x5","updateFollowing","_ref6","activityStore","storeUsername","_x6","_x7","loadFollowings","_ref7","_x8","loadUserActivities","_ref8","_callee8","_context8","_x9","_x10","UserStore","userStore_regeneratorRuntime","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","CommonStore","getItem","appLoaded","setAppLoaded","setItem","ModalStore","modal","open","openModal","content","profileStore","commentStore","CommentStore","comments","hubConnection","createHubConnection","activiId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","clearComments","addComment","commentStore_regeneratorRuntime","activityId","invoke","StoreContext","createContext","useStore","useContext","observer","userImage","userDispName","userName","_useStore$userStore","react_default","createElement","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","_useStore$activitySto","Fragment","vertical","size","width","marginTop","Header","attached","color","active","has","Calendar","onChange","_useStore","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","extra","Icon","profiles_FollowButton","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","profiles_ProfileCard","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","react_router_dom","format","secondary","dashboard_ActivityListItemAttendee","clearing","floated","groupedActivities","slicedToArray","group","react","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","_useState","useState","_useState2","loadingNext","setLoadingNext","useEffect","totalPages","currentPage","Grid","Column","react_infinite_scroller_default","pageStart","loadMore","hasMore","initialLoad","dashboard_ActivityList","dashboard_ActivityFilters","Loader","MyTextInput","props","_useField","useField","_useField2","field","meta","Form","Field","touched","label","formik_esm","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","users_LoginForm","users_RegisterForm","LoadingComponent","_ref$inverted","_ref$content","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","react_datepicker_min_default","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","_ref$activity","relaxed","divided","Extra","details_ActivityDetailedHeader","details_ActivityDetailedInfo","details_ActivityDetailedChat","details_ActivityDetailedSidebar","TestErrors","baseUrl","widths","primary","NotFound","Inline","message","Modal","onClose","bio","setEditMode","_useStore$profileStor","React","isCurrentUser","Tab","Pane","profiles_ProfileEditForm","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","GridColumn","PhotoWidgetcropper","imagePreview","setCropper","react_cropper_es","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","_useState3","_useState4","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","profiles_ProfileAbout","profiles_ProfilePhotos","profiles_ProfileActivities","profiles_ProfileFollowings","menuPosition","Statistic","Divider","profiles_ProfileHeader","profiles_ProfileContent","PrivateRoute","Component","component","rest","objectWithoutProperties","react_router","location","useLocation","finally","react_toastify_esm","hideProgressBar","modals_ModalContainer","path","HomePage","layout_NavBar","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","TestError","ServerError","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","__webpack_exports__","src_history","createBrowserHistory","ReactDOM","createRoot","document","getElementById","Provider","layout_App"],"mappings":"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","file":"static/js/main.63ba1716.chunk.js","sourcesContent":["export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T>{\n    data: T;\n    pagination: Pagination;\n\n    constructor(data:T, pagination: Pagination){\n        this.data = data;\n        this.pagination = pagination;\n    }\n}\n\nexport class PagingParams {\n    pageNumber;\n    pageSize;\n\n\n    constructor(pageNumber = 1, pageSize = 2){\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { store } from \"../stores/store\";\nimport { Activity, ActivityFormValues } from \"../models/acitivity\";\nimport { ServerError } from \"../models/serverError\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { PaginatedResult } from \"../models/pagination\";\n\nconst sleep = (delay: number) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay);\n    })\n}\n\ninterface AxiosResponseData {\n    errors: object\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if (token && config && config.headers) // Cant use ? unfortunately \n        config.headers.Authorization = `Bearer ${token}`;\n\n    return config;\n\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\n    \n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n        return response as AxiosResponse<PaginatedResult<any>>\n    }\n\n    return response;\n}, (error: AxiosError) => {\n    const {data, status, config} = error.response!;\n    switch (status) {\n        case 400:\n            //to do: Разобраться, почему требуются яные приведения и не работают конструкции .?\n            if (typeof data === 'string'){\n                toast.error(data);\n            }\n            if (data instanceof Object  && data.hasOwnProperty('errors')){\n                const {errors} = data as AxiosResponseData\n                const modalStateErrors = [];\n                \n                if (config.method === 'get' && errors.hasOwnProperty('id')){\n                    history.push('/not-found');\n                }\n\n                for (const key in errors){\n                    if (errors[key as keyof Object]){\n                        modalStateErrors.push(errors[key as keyof Object])\n                    }\n                }\n                throw modalStateErrors.flat();\n\n            }\n            /*\n            else {\n                const errorText = data as string;\n                toast.error(errorText);\n            }\n            */\n            break;\n        case 401:\n            toast.error('unauthorised');\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            const serverError = data as ServerError;\n            store.commonStore.setServerError(serverError);\n            history.push('/server-error');\n            break;\n    }\n\n    return Promise.reject(error);\n});\n\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    delete: <T> (url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params})\n        .then(responseBody),\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n    update: (acitivity: ActivityFormValues) => requests.put<void>(`/activities/${acitivity.id}`, acitivity),\n    delete: (id: string) => requests.delete<void>(`/activities/${id}`),\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n    current: () => requests.get<User>('/account'),\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user)\n}\n\nconst Profiles = {\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n    uploadPhoto: (file: Blob) => {\n        let formData = new FormData();\n        formData.append('File', file);\n        return axios.post<Photo>('photos', formData, {\n            headers: {'Content-type': 'multipart/form-data'}\n        })\n    },\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n    deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\n    updateFollowings: (username: string) => requests.post(`/follow/${username}`, {}),\n    listFollowings: (username: string, predicate: string) => \n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n    listActivities: (username: string, predicate: string) =>\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n    Activities,\n    Account,\n    Profiles\n}\n\nexport default agent;","import { Profile } from \"./profile\";\n\nexport interface Activity {\n    id: string;\n    title: string;\n    date: Date | null;\n    description: string;\n    category: string;\n    city: string;\n    venue: string;\n    hostUsername?: string;\n    isCancelled?: boolean;\n    isGoing: boolean;\n    isHost: boolean;\n    host?: Profile;\n    attendees: Profile[]\n  }\n\nexport class Activity implements Activity {\n    constructor(init?: ActivityFormValues){\n      Object.assign(this, init);\n    }\n  }\n\nexport class ActivityFormValues{\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues){\n    if (activity){\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n  ","import { User } from \"./user\";\n\nexport interface Photo {\n    id: string,\n    url: string;\n    isMain: boolean;\n}\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    bio?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    photos?: Photo[]\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { makeAutoObservable, reaction, runInAction} from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/acitivity\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\nimport { Profile } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ActivityStore{\n    activityRegistry = new Map<string, Activity>();\n    selectedActivity: Activity | undefined = undefined;\n    editMode = false;\n    loading = false;\n    loadingInitial = false;\n    pagination: Pagination | null = null;\n    pagingParams = new PagingParams();\n    predicate = new Map().set('all', true);\n\n    constructor(){\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.predicate.keys(),\n            () => {\n                this.pagingParams = new PagingParams();\n                this.activityRegistry.clear();\n                this.loadActivities();\n            }\n        )\n    }\n\n    setPagingParams = (pagingParams: PagingParams) => {\n        this.pagingParams = pagingParams;\n    }\n\n    setPredicate = (predicate: string, value: string | Date) => {\n\n        const resetPredicate = () => {\n            this.predicate.forEach((value, key) => {\n                if (key !== 'startDate') this.predicate.delete(key);\n            })\n        }\n\n        switch (predicate){\n            case 'all':\n                resetPredicate();\n                this.predicate.set('all', true);\n                break;\n            case 'isGoing':\n                resetPredicate();\n                this.predicate.set('isGoing', true);\n                break;\n            case 'isHost':\n                resetPredicate();\n                this.predicate.set('isHost', true);\n                break;\n            case 'startDate':\n                this.predicate.delete('startDate');\n                this.predicate.set('startDate', value);\n                break;\n        }\n    }\n\n    get axiosParams(){\n        const params = new URLSearchParams();\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\n        params.append('pageSize', this.pagingParams.pageSize.toString());\n        this.predicate.forEach((value, key) => {\n            if (key === 'startDate'){\n                params.append(key, (value as Date).toISOString())\n            }\n            else {\n                params.append(key, value);\n            }\n        })\n\n        return params;\n    }\n\n    get activitiesByDate() {\n        return Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime())\n    }\n\n    get groupedActivities(){\n        return Object.entries(\n            this.activitiesByDate.reduce((activities, activity) => {\n                const date = activity.date!.toISOString().split('T')[0];\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n                return activities;\n            }, {} as {[key: string]: Activity[]})\n        )\n    }\n\n    loadActivities = async () => {\n        this.setLoadingInitil(true);\n        try {\n            const result = await agent.Activities.list(this.axiosParams);\n\n            result.data.forEach(activity =>{\n                this.setActivity(activity);\n                \n            });\n            this.setPagination(result.pagination);\n            this.setLoadingInitil(false);\n        } catch (err) {\n            console.log(err);\n            this.setLoadingInitil(false);\n            \n        }\n    }\n\n    setPagination = (pagination: Pagination) => {\n        this.pagination = pagination;\n    }\n\n    private setActivity = (activity: Activity) => {\n        const user = store.userStore.user;\n        if (user){\n            activity.isGoing = activity.attendees!.some(\n                a => a.username === user.username\n            )\n\n            activity.isHost = activity.hostUsername === user.username;\n\n            if (activity.attendees)\n                activity.host = activity.attendees.find(x => x.username === activity.hostUsername); //can't use nullable ?\n        }\n\n        activity.date = new Date(activity.date!);\n        this.activityRegistry.set(activity.id, activity);\n    }\n\n    loadAtivity = async (id: string) => {\n        let activity = this.getActivity(id);\n\n        if (activity) {\n            this.selectedActivity = activity;\n            return activity;\n        } else {\n            this.loadingInitial = true;\n\n            try {\n                activity = await agent.Activities.details(id); \n                this.setActivity(activity);\n                runInAction(() => {\n                    this.selectedActivity = activity;\n                });\n                this.setLoadingInitil(false);\n                return activity;\n            } catch(error)\n            {\n                console.log(error);\n                this.setLoadingInitil(false);\n            }\n        }\n    }\n\n    private getActivity = (id: string) => {\n        return this.activityRegistry.get(id);\n    }\n\n    setLoadingInitil = (state: boolean) => {\n        this.loadingInitial = state;\n    }\n\n    createActivity = async (activity: ActivityFormValues) => {\n        const user = store.userStore.user;\n        const attendee = new Profile(user!);\n        try{\n            await agent.Activities.create(activity);\n            const newActivity = new Activity(activity);\n            newActivity.hostUsername = user!.username;\n            newActivity.attendees = [attendee];\n            this.setActivity(newActivity);\n            runInAction(() => {\n                this.selectedActivity = newActivity;\n            })\n        }\n        catch (error){\n            console.log(error);\n        }\n    }\n\n    updateActivity = async (activity: ActivityFormValues) => {\n        try{\n            await agent.Activities.update(activity);\n            runInAction(() => {\n                if (activity.id){\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity};\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\n                    this.selectedActivity = updatedActivity as Activity;\n                }\n            })\n        }\n        catch(error){\n            console.log(error);\n        }\n\n    }\n\n    deleteActivity = async (id: string) => {\n        this.loading = true;\n\n        try {\n            await agent.Activities.delete(id);\n\n            runInAction(() => {\n                this.activityRegistry.delete(id);\n                this.loading = false;\n            })\n\n        }\n        catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loading = false;\n            })\n\n        }\n    }\n\n    updateAttendance = async () => {\n        const user = store.userStore.user;\n        this.loading = true;\n\n        let username: string; //cant use a => a.username !== user?.username\n        if (user)\n            username = user.username;\n\n        try{\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                if (this.selectedActivity && this.selectedActivity.isGoing){ //cant use this.selectedActivity?.isGoing\n                    if (this.selectedActivity.attendees) { //cant use this.selectedActivity.attendees?.filter(\n                        this.selectedActivity.attendees = \n                            this.selectedActivity.attendees.filter(a => a.username !== username); //cant use a => a.username !== user?.username\n                    }\n                    \n                    this.selectedActivity.isGoing = false;\n                }\n                else {\n                    const attendee = new Profile(user!);\n\n                    if (this.selectedActivity && this.selectedActivity.attendees){\n                        this.selectedActivity.attendees.push(attendee); //cant use this.selectedActivity?.attendees?.push(attendee);\n                    }\n                    \n                    this.selectedActivity!.isGoing = true;\n                }\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n            })\n        } \n        catch(error) {\n            console.log(error);\n        }\n        finally {\n            runInAction(() => this.loading = false);\n        }\n\n    }\n\n    cancellActivityToggle = async () => {\n        this.loading = true;\n        try {\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                this.selectedActivity!.isCancelled = !this.selectedActivity || !this.selectedActivity.isCancelled; //cant use !this.selectedActivity?.isCancelled;\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n            })\n        } catch (error) {\n            console.log(error);\n        } finally {\n            runInAction( () => this.loading = false);\n        }\n    }\n\n    clearSelectedActivity = () => {\n        this.selectedActivity = undefined;\n    }\n\n    updateAttendeeFollowing = (username: string) => {\n        this.activityRegistry.forEach(activity => {\n            activity.attendees.forEach(attendee => {\n                if (attendee.username == username) {\n                    attendee.following ? attendee.followersCount-- : attendee.followingCount++;\n                    attendee.following = !attendee.following;\n                }\n            })\n        })\n    }\n\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n    followings: Profile[] = [];\n    loadingFollowings = false;\n    activeTab = 0;\n    userActivities: UserActivity[] = [];\n    loadingActivities = false;\n\n    constructor(){\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.activeTab,\n            activeTab => {\n                if (activeTab === 3 || activeTab === 4) {\n                    const predicate = activeTab === 3 ? 'followers' : 'followings';\n                    this.loadFollowings(predicate);\n                } else {\n                    this.followings = []\n                }\n            }\n        )\n    }\n\n    setActiveTab = (activeTab: any) => {\n        this.activeTab = activeTab;\n    }\n\n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.username === this.profile.username;\n        }\n\n        return false;\n    }\n\n    loadProfile = async (username: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(username);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n    uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile && this.profile.photos){ // cant use nullable\n                    this.profile.photos.push(photo);\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n                this.uploading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.uploading = false);\n        }\n    }\n\n    setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) { // cant use nullable\n                    this.profile.photos = this.profile.photos.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            })\n\n        } catch (error) {\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    updateProfile = async (profile: Partial<Profile>) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateProfile(profile);\n            runInAction(() => {\n\n                let displayName;\n                if (store.userStore.user)\n                    displayName = store.userStore.user.displayName;\n\n                if (profile.displayName && profile.displayName !== displayName) {\n                    store.userStore.setDisplayName(profile.displayName);\n                }\n                this.profile = {...this.profile, ...profile as Profile};\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n    \n    updateFollowing = async (username: string, following: boolean) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateFollowings(username);\n            store.activityStore.updateAttendeeFollowing(username);\n            runInAction(() => {\n                let storeUsername: string | null = null;\n                if (store.userStore.user) //cant use nullable\n                    storeUsername = store.userStore.user.username;\n\n                if (this.profile && this.profile.username !== storeUsername && this.profile.username === username) {\n                    console.log(this.profile);\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\n                    this.profile.following = !this.profile.following;\n                }\n                if (this.profile && this.profile.username === storeUsername) {\n                    console.log(this.profile);\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\n                }\n                this.followings.forEach(profile => {\n                    if (profile.username === username) {\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\n                        profile.following = !profile.following;\n                    }\n                })\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    loadFollowings = async (predicate: string) => {\n        this.loadingFollowings = true;\n        try {\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n            runInAction(() => {\n                this.followings = followings;\n                this.loadingFollowings = false;\n            })\n        } catch (error) {\n            runInAction(() => this.loadingFollowings = false);\n        }\n    }\n\n    loadUserActivities = async (username: string, predicate?: string) => {\n        this.loadingActivities = true;\n        try {\n            const activities = await agent.Profiles.listActivities(username, predicate!);\n            runInAction(() => {\n                this.userActivities = activities;\n                this.loadingActivities = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loadingActivities = false;\n            })\n        }\n    }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    user: User | null = null;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n\n    getUser = async () => {\n        try{\n            const user = await agent.Account.current();\n            runInAction(() => this.user = user);\n        }\n        catch (error){\n            console.log(error);\n        }\n    }\n\n    register = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.register(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n\n    setImage = (image: string) => {\n        if (this.user){\n            this.user.image = image;\n        }\n    }\n\n    setDisplayName = (name: string) => {\n        if (this.user) this.user.displayName = name;\n    }\n\n}","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n    activityStore: ActivityStore;\n    commonStore: CommonStore;\n    userStore: UserStore;\n    modalStore: ModalStore;\n    profileStore: ProfileStore;\n    commentStore: CommentStore;\n}\n\nexport const store: Store = {\n    activityStore: new ActivityStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    profileStore: new ProfileStore(),\n    commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n    error: ServerError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token){\n                    window.localStorage.setItem('jwt', token);\n                }\n                else{\n                    window.localStorage.removeItem('jwt');\n                }\n            }\n        )\n    }\n\n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n\n    }\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n    comments: ChatComment[] = [];\n    hubConnection: HubConnection | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    createHubConnection = (activiId: string) => {\n        if (store.activityStore.selectedActivity){\n            this.hubConnection = new HubConnectionBuilder()\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activiId, {\n                    accessTokenFactory: () => {return store.userStore.user ? store.userStore.user.token! : ''} //cant yse nullable\n                })\n                .withAutomaticReconnect()\n                .configureLogging(LogLevel.Information)\n                .build();\n\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n                runInAction(() => {\n                    comments.forEach(comment => {\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\n                    })\n                    this.comments = comments});\n            })\n\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n                runInAction(() => {\n                    comment.createdAt = new Date(comment.createdAt);\n                    this.comments.unshift(comment)\n                });\n            })\n        }\n    }\n    \n    stopHubConnection = () => {\n        if (this.hubConnection) //cant use nullable\n            this.hubConnection.stop().catch(error => console.log('Error stoping connection: ', error));\n    }\n\n    clearComments = () => {\n        this.comments = [];\n        this.stopHubConnection();\n    }\n\n    addComment = async (values: any) => {\n        if (store.activityStore.selectedActivity)\n            values.activityId = store.activityStore.selectedActivity.id;\n        try {\n            if (this.hubConnection)\n                await this.hubConnection.invoke('SendComment', values);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react'\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar(){\n    const {userStore: {user, logout}} = useStore();\n    let userImage, userDispName, userName;\n\n    if (user)\n    {\n        userImage = user.image;\n        userDispName = user.displayName;\n        userName = user.username;\n    }\n    else\n    {\n        userImage = '/assets/user.png';\n    }\n\n    return (\n        <Menu inverted fixed='top'>\n            <Container>\n                <Menu.Item as={NavLink} to='/' exact header>\n                    <img src=\"assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}/>\n                    Reactivities\n                </Menu.Item>\n                <Menu.Item as={NavLink} to='/activities' name='Activities'/>\n                <Menu.Item as={NavLink} to='/errors' name='Errors'/>\n                <Menu.Item>\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\n                </Menu.Item>\n                <Menu.Item position='right'>\n                    <Image src={userImage} avatar spaced='right'/>\n                    <Dropdown pointing='top left' text={userDispName}>\n                        <Dropdown.Menu>\n                            <Dropdown.Item as={Link} to={`/profile/${userName}`} text='My Profile' icon='user'/>\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Item>\n            </Container>\n        </Menu>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Calendar } from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters(){\n    const {activityStore: {predicate, setPredicate}} = useStore();\n    return (\n        <>\n            <Menu vertical size='large' style={{width: '100%', marginTop: 25}}>\n                <Header icon='filter' attached color='teal' content='Filters' />\n                <Menu.Item \n                    content='All Activities'\n                    active={predicate.has('all')}\n                    onClick={() => setPredicate('all', 'true')}\n                />\n                <Menu.Item \n                    content=\"I'm going\"\n                    active={predicate.has('isGoing')}\n                    onClick={() => setPredicate('isGoing', 'true')}\n                />\n                <Menu.Item \n                    content=\"I'm hosting\" \n                    active={predicate.has('isHost')}\n                    onClick={() => setPredicate('isHost', 'true')}\n                />\n            </Menu>\n            <Header />\n            <Calendar \n                onChange={(date: Date) => setPredicate('startDate', date as Date)}\n                value={predicate.get('startDate') || new Date()}\n            />\n        </>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function FollowButton({profile}: Props) {\n    const {profileStore, userStore} = useStore();\n    const {updateFollowing, loading} = profileStore;\n\n    if (userStore.user && userStore.user.username === profile.username) return null;\n\n    function handleFollow(e: SyntheticEvent, username: string) {\n        e.preventDefault();\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n\n    }\n\n    return (\n        <Reveal animated='move'>\n            <Reveal.Content visible style={{width: '100%'}}>\n                <Button \n                    fluid \n                    color='teal' \n                    content={profile.following ? 'Following' : 'Not following'}\n                />\n            </Reveal.Content>\n            <Reveal.Content hidden style={{width: '100%'}}>\n                <Button \n                    fluid\n                    basic\n                    color={profile.following ? 'red' : 'green'}\n                    content={profile.following ? 'Unfollow' : 'Follow'}\n                    loading={loading}\n                    onClick={(e) => handleFollow(e, profile.username)}\n                />\n            </Reveal.Content>\n        </Reveal>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer (function ProfileCard({profile}: Props){\n    console.log(profile.followersCount);\n    return (\n        <Card as={Link} to={`/profiles/${profile.username}`}>\n            <Image src={profile.image || `/assets/user.png`} />\n            <Card.Content>\n                <Card.Header>{profile.displayName}</Card.Header>\n                <Card.Description>Bio goes here</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <Icon name='user' />\n                {profile.followersCount} followers\n            </Card.Content>\n            <FollowButton profile={profile}/>\n        </Card>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n    attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({attendees}: Props){\n\n    const styles = {\n        borderColor: 'orange',\n        borderWidth: 3\n    }\n\n    return (\n        <List horizontal>\n            {attendees.map(attendee => (\n                <Popup \n                    hoverable\n                    key={attendee.username}\n                    trigger={\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n                            <Image \n                                size='mini' \n                                circular src = {attendee.image || '/assets/user.png'}\n                                bordered\n                                style={attendee.following ? styles : null}    \n                            />\n                        </List.Item>    \n                    }\n                >\n                    <Popup.Content>\n                        <ProfileCard profile={attendee} />\n                    </Popup.Content>\n                </Popup>\n                \n            ))}\n        </List>\n    )\n})","import {format} from 'date-fns'\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/acitivity\";\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\n\ninterface Props{\n    activity: Activity\n}\n\n\nexport default function ActivityListItem({activity}: Props){\n\n    let displayName;\n    let image;\n    if (activity.host)\n    {\n        displayName = activity.host.displayName; //can't use nullable check ?\n        image = activity.host.image;\n    }\n    return (\n        <Segment.Group>\n            <Segment>\n                {activity.isCancelled && \n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}}/>\n                }\n                <Item.Group>\n                    <Item>\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular src={image || '/assets/user.png'} />\n                        <Item.Content>\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                                {activity.title}\n                            </Item.Header>\n                            <Item.Description>\n                                Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{displayName}</Link>\n                            </Item.Description>\n                            {activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color='orange'>\n                                        You are hosting this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                            {activity.isGoing && !activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color='green'>\n                                        You are going to this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n            <Segment>\n                <span>\n                    <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n                    <Icon name='marker' /> {activity.venue}\n                </span>\n            </Segment>\n            <Segment secondary>\n                <ActivityListItemAttendee attendees={activity.attendees!} />\n            </Segment>\n            <Segment clearing>\n                <span>{activity.description}</span>\n                <Button\n                    as={Link}\n                    to={`/activities/${activity.id}`}\n                    color='teal'\n                    floated='right'\n                    content='View'\n                />\n            </Segment>\n        </Segment.Group>\n    )\n}","import { observer } from \"mobx-react-lite\";\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nexport default observer(function ActivityList(){\n\n    const {activityStore} = useStore();\n    const {groupedActivities} = activityStore;\n\n    return (\n        <>\n            {groupedActivities.map(([group, activities]) => (\n                <Fragment key={group}>\n                    <Header sub color='teal'>\n                        {group}\n                    </Header>\n                    {activities.map(activity => (\n                        <ActivityListItem key={activity.id} activity={activity} />        \n                    ))}\n                </Fragment>\n            ))}\n        </>\n        \n    );\n})","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItem from \"./ActivityListItem\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\n\nexport default observer (function ActivityDashboard(){\n\n    const {activityStore} = useStore();\n    const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\n    const [loadingNext, setLoadingNext] = useState(false);\n\n    function handleGetNext(){\n        setLoadingNext(true);\n        setPagingParams(new PagingParams(pagination!.currentPage + 1));\n        loadActivities().then(() => setLoadingNext(false));\n    }\n\n    useEffect(() => {\n        if (activityRegistry.size <= 1)\n            activityStore.loadActivities();\n    }, [activityRegistry.size, loadActivities])\n\n    let totalPages;\n    let curPage;\n\n    if (pagination){\n        totalPages = pagination.totalPages;\n        curPage = pagination.currentPage;\n    }\n\n    return (\n        <Grid>\n            <Grid.Column width='10'>\n                {activityStore.loadingInitial && !loadingNext ? (\n                    <>\n                        <ActivityListItemPlaceholder />\n                    </>\n                ) : (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={handleGetNext}\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n                        initialLoad={false}\n                    >\n                        <ActivityList />\n                    </InfiniteScroll>\n                )}\n            </Grid.Column>\n            <Grid.Column width='6'>\n                <ActivityFilters />\n            </Grid.Column>\n            <Grid.Column width={10}>\n                <Loader active={loadingNext} />\n            </Grid.Column>\n        </Grid>\n    );\n})","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props{\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;\n}\n\nexport default function MyTextInput(props: Props){\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm(){\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => setErrors({error: 'Invalid email or password'}))}\n        >\n            {({handleSubmit, isSubmitting, errors}) => (\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\n                    <MyTextInput name='email' placeholder='Email'/>\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\n                    <ErrorMessage \n                        name='error' render={() => <Label style={{marginBottom: 10}} basic color = 'red' content={errors.error}/>}\n                    />\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\n                </Form>\n            )}\n        </Formik>\n    )\n})","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n    //errors: string[] | null;\n    errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props)\n{\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from 'yup';\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm(){\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => setErrors({error}))}\n            validationSchema={Yup.object({\n                displayName: Yup.string().required(),\n                username: Yup.string().required(),\n                email: Yup.string().required().email(),\n                password: Yup.string().required()\n            })}\n        >\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center'/>\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\n                    <MyTextInput name='username' placeholder='Username'/>\n                    <MyTextInput name='email' placeholder='Email'/>\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\n                    <ErrorMessage \n                        name='error' render={() => <ValidationErrors errors={errors.error}/>}\n                    />\n                    <Button disabled={!isValid || !dirty || isSubmitting} \n                        loading={isSubmitting} positive content='Resister' type='submit' fluid/>\n                </Form>\n            )}\n        </Formik>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Header, Image, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport LoginForm from \"../../users/LoginForm\";\nimport RegisterForm from \"../../users/RegisterForm\";\n\nexport default observer(function HomePage(){\n    const {userStore, modalStore} = useStore();\n    return (\n        <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n            <Container text>\n                <Header as='h1' inverted>\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}} />\n                    Reactivities\n                </Header>\n                {userStore.isLoggedIn ? (\n                    <>\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\n                        <Button as={Link} to='/activities' size='huge' inverted>\n                            Go to activities!\n                        </Button>\n                    </>\n                    \n                ) : (\n                    <>\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\n                            Login!\n                        </Button>\n                        <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>\n                            Resiter!\n                        </Button>\n                    </>\n                )}\n                \n                \n            </Container>\n        </Segment>\n    )\n})","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props){\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content} />\n        </Dimmer>\n    )\n}","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props{\n    placeholder: string;\n    name: string;\n    rows: number;\n    label?: string;\n}\n\nexport default function MyTextArea(props: Props){\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <textarea {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props{\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;\n}\n\nexport default function MySelectInput(props: Props){\n    const [field, meta, helpers] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <Select\n                clearable\n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","export const categoryOptions = [\n    {text: 'Drinks', value: 'drinks'}, \n    {text: 'Culture', value: 'culture'}, \n    {text: 'Film', value: 'film'}, \n    {text: 'Food', value: 'food'}, \n    {text: 'Music', value: 'music'}, \n    {text: 'Travel', value: 'travel'}\n]","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker'\n\ninterface Props{\n    placeholder: string;\n    name: string;\n    label?: string;\n}\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>){\n    const [field, meta, helpers] = useField(props.name!);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <DatePicker\n                {...field}\n                {...props}\n                selected={(field.value && new Date(field.value)) || null}\n                onChange={value => helpers.setValue(value)}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport {v4 as uuid} from 'uuid';\nimport { Formik, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { Activity, ActivityFormValues } from \"../../../app/models/acitivity\";\n\nexport default observer (function ActivityForm(){\n    const history = useHistory();\n    const {activityStore} = useStore();\n    const {loading, createActivity, updateActivity, loadAtivity, loadingInitial} = activityStore;\n    const {id} = useParams<{id: string}>();\n\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n    const validationSchema = Yup.object({\n        title: Yup.string().required('The activity title is required'),\n        description: Yup.string().required('The activity description is required'),\n        category: Yup.string().required(),\n        date: Yup.string().required('Date is required').nullable(),\n        venue: Yup.string().required(),\n        city: Yup.string().required()\n    })\n\n    useEffect(() => {\n        if (id) \n            loadAtivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\n    }, [id, loadAtivity]);\n\n    function handleFormSubmit(activity: ActivityFormValues){\n        if(!activity.id){\n            let newActivity = {\n                ...activity,\n                id: uuid()\n            };\n\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n        } else {\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\n        }\n    }\n\n    if (loadingInitial)\n        return <LoadingComponent content='Loading activity...'/>\n    \n\n    return (\n        <Segment clearing>\n            <Header content='Activity Details' sub color='teal' />\n            <Formik\n                validationSchema={validationSchema}\n                enableReinitialize \n                initialValues={activity} \n                onSubmit={values => handleFormSubmit(values)}>\n                {\n                    ({handleSubmit, isValid, isSubmitting, dirty}) => (\n                        //to do className=\"ui form\" - позволяет использовать стиль семантик-юай, как это работает?\n                        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete='off'>\n                            <MyTextInput name='title' placeholder='Title' />\n                            <MyTextArea rows={3} placeholder='Description' name='description' />\n                            <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\n                            <MyDateInput \n                                placeholderText='Date' \n                                name='date'\n                                showTimeSelect\n                                timeCaption='time'\n                                dateFormat='dd-MMMM-yyyy h:mm aa'\n                            />\n                            <Header content='Location Details' sub color='teal' />\n                            <MyTextInput placeholder='City' name='city' />\n                            <MyTextInput placeholder='Venue' name='venue' />\n                            <Button \n                                disabled={isSubmitting || !dirty || !isValid}\n                                loading={isSubmitting} \n                                floated=\"right\" positive type=\"submit\" content='Submit' />\n                            <Button as={Link} to='/activities' floated=\"right\" type=\"button\" content='Cancel'/>\n                        </Form>\n                    )\n                }\n            </Formik>\n            \n        </Segment>\n    )\n})","import { Formik, Form, Field, FieldProps} from 'formik';\nimport { observer } from 'mobx-react-lite'\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\nimport { useStore } from '../../../app/stores/store';\nimport * as Yup from 'yup'\nimport { formatDistanceToNow } from 'date-fns';\n\ninterface Props {\n    activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\n    const {commentStore} = useStore();\n\n    useEffect(() => {\n        if (activityId) {\n            commentStore.createHubConnection(activityId);\n        }\n\n        return () => {\n            commentStore.clearComments();\n        }\n\n    }, [commentStore, activityId]);\n\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                attached='top'\n                inverted\n                color='teal'\n                style={{border: 'none'}}\n            >\n                <Header>Chat about this event</Header>\n            </Segment>\n            <Segment attached clearing>\n            <Formik\n                        onSubmit={(values, {resetForm}) => commentStore.addComment(values).then(() => resetForm())}\n                        initialValues={{body: ''}}\n                        validationSchema={Yup.object({\n                            body: Yup.string().required()\n                        })}\n                    >\n                        {({isSubmitting, isValid, handleSubmit}) => (\n                            <Form className='ui form'>\n                                <Field name='body'>\n                                    {(props: FieldProps) => (\n                                        <div style={{position: 'relative'}}>\n                                            <Loader active={isSubmitting} />\n                                            <textarea  \n                                                placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\n                                                rows={2}\n                                                {...props.field}\n                                                onKeyPress={e => {\n                                                    if (e.key === 'Enter' && e.shiftKey) {\n                                                        return;\n                                                    }\n\n                                                    if (e.key === 'Enter' && !e.shiftKey) {\n                                                        e.preventDefault();\n                                                        isValid && handleSubmit();\n                                                    }\n                                                }}\n                                            />\n                                        </div>\n                                    )}\n                                </Field>\n                            \n                            </Form>\n                        )}\n                    </Formik>\n                <Comment.Group>\n                    {commentStore.comments.map(comment => (\n                        <Comment key={comment.id}>\n                            <Comment.Avatar src={comment.image || '/assets/user.png'}/>\n                            <Comment.Content>\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\n                                <Comment.Metadata>\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                                </Comment.Metadata>\n                                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\n                            </Comment.Content>\n                        </Comment>\n                    ))}\n\n                    \n                </Comment.Group>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\nimport { Activity } from '../../../app/models/acitivity';\nimport { format } from 'date-fns';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\n    const {activityStore: {updateAttendance, loading, cancellActivityToggle}} = useStore();\n    let displayName;\n    let username;\n    if (activity.host)\n    {\n        displayName = activity.host.displayName; // nullable does not work\n        username = activity.host.username;\n    }\n\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{padding: '0'}}>\n                {activity.isCancelled && \n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} \n                        ribbon color='red' content='Cancelled'/>\n                }\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{color: 'white'}}\n                                />\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${username}`}>{displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {activity.isHost ? (\n                    <>\n                        <Button\n                            color={activity.isCancelled ? 'green' : 'red'}\n                            floated='left'\n                            basic\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n                            onClick={cancellActivityToggle}\n                            loading={loading}\n                        />\n                        <Button as={Link}\n                            disabled={activity.isCancelled} \n                            to={`/manage/${activity.id}`} \n                            color='orange' \n                            floated='right'>\n                            Manage Event\n                        </Button>\n                    </>\n                ) : activity.isGoing ? (\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n                ) : (\n                    <Button disabled={activity.isCancelled} \n                        loading={loading} \n                        onClick={updateAttendance} \n                        color='teal'>\n                            Join Activity\n                    </Button>\n                )}\n                \n\n            </Segment>\n        </Segment.Group>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/acitivity\";\nimport {format} from 'date-fns';\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='teal' name='info'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n            <span>\n                {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n            </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})","import React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../app/models/acitivity';\n\ninterface Props {\n    activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}}: Props) {\n    if (!attendees) return null;\n\n    let username : string;\n    if (host)\n        username = host.username;\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{ border: 'none' }}\n                attached='top'\n                secondary\n                inverted\n                color='teal'\n            >\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {attendees.map(attendee => (\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\n                            {attendee.username === username &&\n                                <Label\n                                    style={{ position: 'absolute' }}\n                                    color='orange'\n                                    ribbon='right'\n                                >\n                                    Host\n                                </Label>}\n                        <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n                        <Item.Content verticalAlign='middle'>\n                            <Item.Header as='h3'>\n                                <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                            </Item.Header>\n                            {attendee.following &&\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\n                        </Item.Content>\n                    </Item>\n                    ))}\n                </List>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nexport default observer(function  ActivityDetails(){\n    \n    const {activityStore} = useStore();\n    const {selectedActivity: activity, loadAtivity, loadingInitial, clearSelectedActivity} = activityStore;\n    const {id} = useParams<{id: string}>();\n\n    useEffect(() => {\n        if (id) loadAtivity(id);\n        return () => clearSelectedActivity();\n    }, [id, loadAtivity, clearSelectedActivity]);\n\n    if (loadingInitial || !activity) return <LoadingComponent />;\n\n    return (\n        <Grid>\n            <Grid.Column width={10}>\n                <ActivityDetailedHeader activity={activity}/>\n                <ActivityDetailedInfo activity={activity}/>\n                <ActivityDetailedChat activityId={activity.id}/>\n            </Grid.Column>\n            <Grid.Column width={6}>\n                <ActivityDetailedSidebar activity={activity}/>\n            </Grid.Column>\n        </Grid>\n    );\n})","import React, { useState } from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors && \n                <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n        \n    )\n}","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function ServerError() {\n    const {commonStore} = useStore();\n\n    let message = null;\n    let details = null;\n    \n    if (commonStore.error !== null && commonStore.error !== undefined){\n        message = commonStore.error.message;\n        details = commonStore.error.details;\n    }\n\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header sub as='h5' color='red' content={message} />\n            {details && \n                <Segment>\n                    <Header as='h4' content='Stack trace' color='teal' />\n                    <code style={{marginTop: '10px'}}>{details}</code>\n                </Segment>\n            }\n        </Container>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n    const {modalStore} = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n\n})","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from 'yup';\n\ninterface Props {\n    setEditMode: (editMode: boolean) => void;\n}\n\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\n    const {profileStore: {profile, updateProfile}} = useStore();\n\n    let displayName, bio;\n    if (profile)\n    {\n        displayName = profile.displayName;\n        bio = profile.bio;\n    }\n\n    return (\n        <Formik\n            initialValues={{displayName: displayName, bio}}\n            onSubmit={values => {\n                updateProfile(values).then(() => {\n                    setEditMode(false);\n                })\n            }}\n            validationSchema={Yup.object({\n                displayName: Yup.string().required()\n            })}\n        >\n            {({isSubmitting, isValid, dirty}) => (\n                <Form className='ui form'>\n                    <MyTextInput placeholder='Display Name' name='displayName' />\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\n                    <Button \n                        positive\n                        type='submit'\n                        loading={isSubmitting}\n                        content='Update profile'\n                        floated='right'\n                        disabled={!isValid || !dirty}\n                    />\n                </Form>\n            )}\n        </Formik>\n    )\n})","import React, {useState} from 'react';\nimport {useStore} from \"../../app/stores/store\";\nimport {Button, Grid, Header, Tab} from \"semantic-ui-react\";\nimport { observer } from 'mobx-react-lite';\nimport ProfileEditForm from './ProfileEditForm';\n\nexport default observer(function ProfileAbout() {\n    const {profileStore} = useStore();\n    const {isCurrentUser, profile} = profileStore;\n    const [editMode, setEditMode] = useState(false);\n\n    let displayName, bio;\n    if (profile)\n    {\n        displayName = profile.displayName;\n        bio = profile.bio;\n    }\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width='16'>\n                    <Header floated='left' icon='user' content={`About ${profile!.displayName}`} />\n                    {isCurrentUser && (\n                        <Button\n                            floated='right'\n                            basic\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\n                            onClick={() => setEditMode(!editMode)}\n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width='16'>\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{whiteSpace: 'pre-wrap'}}>{profile!.bio}</span>}\n\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})","import React, { SyntheticEvent, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { UserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n    { menuItem: 'Future Events', pane: { key: 'future' } },\n    { menuItem: 'Past Events', pane: { key: 'past' } },\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\n];\n\nexport default observer(function ProfileActivities() {\n    const { profileStore } = useStore();\n    const {\n        loadUserActivities,\n        profile,\n        loadingActivities,\n        userActivities\n    } = profileStore;\n\n    useEffect(() => {\n        loadUserActivities(profile!.username);\n    }, [loadUserActivities, profile]);\n\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\n    };\n\n    return (\n        <Tab.Pane loading={loadingActivities}>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated='left' icon='calendar' content={'Activities'} />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    <Tab\n                        panes={panes}\n                        menu={{ secondary: true, pointing: true }}\n                        onTabChange={(e, data) => handleTabChange(e, data)}\n                    />\n                    <br />\n                    <Card.Group itemsPerRow={4}>\n                        {userActivities.map((activity: UserActivity) => (\n                            <Card\n                                as={Link}\n                                to={`/activities/${activity.id}`}\n                                key={activity.id}\n                            >\n                                <Image\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\n                                />\n                                <Card.Content>\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                                    <Card.Meta textAlign='center'>\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                                    </Card.Meta>\n                                </Card.Content>\n                            </Card>\n                        ))}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    );\n});","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Grid, GridColumn, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings(){\n    const {profileStore} = useStore();\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\n\n    let displayName;\n    if (profile)\n        displayName = profile.displayName;\n\n    return (\n        <Tab.Pane loading={loadingFollowings}>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header \n                        floated='left' \n                        icon='user' \n                        content={activeTab === 3 ? `People following ${displayName}` : `People ${displayName} is following`} />\n                </Grid.Column>\n                <GridColumn width={16}>\n                    <Card.Group itemsPerRow={4}>\n                        {followings.map(profile => (\n                            <ProfileCard key={profile.username} profile={profile}/>\n                        ))}\n                    </Card.Group>\n                </GridColumn>\n            </Grid>\n        </Tab.Pane>\n    )\n})","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n    imagePreview: string;\n    setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetcropper({imagePreview, setCropper}: Props){\n    return (\n        <Cropper \n            src={imagePreview}\n            style={{height: 200, width: '100%'}}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            preview='.img-preview'\n            guides={false}\n            viewMode={1}\n            autoCropArea={1}\n            background={false}\n            onInitialized={cropper => setCropper(cropper)}\n        />\n    )\n}\n","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react';\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200\n  }\n\n  const dzActive = {\n    borderColor: 'green'\n  }\n\n  const onDrop = useCallback((acceptedFiles: any) => {\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge'/>\n      <Header content='Drop image here' />\n    </div>\n  )\n}","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\nimport PhotoWidgetcropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props{\n    loading: boolean;\n    uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props){\n    const [files, setFiles] = useState<any>([]);\n    const [cropper, setCropper] = useState<Cropper>();\n\n    function onCrop() {\n        if (cropper){\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n        }\n    },[files])\n\n    return (\n        <Grid>\n            <Grid.Column width={4}>\n                <Header color='teal' content='Step 1 - Add Photo' />\n                <PhotoWidgetDropzone setFiles={setFiles} />\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header color='teal' content='Step 2 - Resize image' />\n                {files && files.length > 0 && (\n                    <PhotoWidgetcropper setCropper={setCropper} imagePreview={files[0].preview}/>\n                )}\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header color='teal' content='Step 3 - Preview & Upload' />\n                {files && files.length > 0 &&\n                    <>\n                        <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\n                        <Button.Group widths={2}>\n                            <Button loading={loading} onClick={onCrop} positive icon='check' />\n                            <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n                        </Button.Group>\n                    </>}\n                \n            </Grid.Column>\n        </Grid>\n    )\n}","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({profile}: Props) {\n    const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}} = useStore();\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\n    const [target, setTarget] = useState('');\n\n    function handlePhotoUpload(file: Blob) {\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\n    }\n\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\n        setTarget(e.currentTarget.name);\n        setMainPhoto(photo);\n    }\n\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\n        setTarget(e.currentTarget.name);\n        deletePhoto(photo);\n    }\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                <Header floated='left' image content='Photos' />\n                {isCurrentUser && (\n                    <Button floated='right' basic \n                        content={addPhotoMode ? 'Cancell' : 'Add Photo'}\n                        onClick={() => setAddPhotoMode(!addPhotoMode)}\n                    />\n                )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    {addPhotoMode ? (\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\n                    ) : (\n                        <Card.Group itemsPerRow={5}>\n                            {profile.photos && profile.photos.map(photo => (\n                                <Card key={photo.id}>\n                                    <Image src={photo.url} />\n                                    {isCurrentUser && (\n                                        <Button.Group fluid width={2}>\n                                            <Button \n                                                basic\n                                                color='green'\n                                                content='Main'\n                                                name={'main' + photo.id}\n                                                disabled={photo.isMain}\n                                                loading={target === 'main' + photo.id && loading}\n                                                onClick={e => handleSetMainPhoto(photo, e)}\n                                            />\n                                            <Button \n                                                basic \n                                                color='red' \n                                                icon='trash'\n                                                loading={target === photo.id && loading}\n                                                onClick={e => handleDeletePhoto(photo, e)}\n                                                disabled={photo.isMain}\n                                                name={photo.id}\n                                            />\n                                        </Button.Group>\n                                    )}\n                                </Card>\n                            ))}\n                        </Card.Group>\n                    )}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileActivities from './ProfileActivities';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n    const {profileStore} = useStore();\n\n    const panes = [\n        {menuItem: 'About', render: () => <ProfileAbout />},\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\n        {menuItem: 'Events', render: () => <ProfileActivities />},\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\n        {menuItem: 'Following', render: () => <ProfileFollowings />},\n    ];\n\n    return (\n        <Tab \n            menu={{fluid: true, vertical: true}}\n            menuPosition='right'\n            panes={panes}\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n        />\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Divider, Grid, Header, Item, Reveal, Segment, Statistic } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile}: Props){\n    return (\n        <Segment>\n            <Grid>\n                <Grid.Column width={12}>\n                    <Item.Group>\n                        <Item>\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Header as='h1' content={profile.displayName} />\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Statistic.Group width={2}>\n                        <Statistic label='Followers' value={profile.followersCount} />\n                        <Statistic label='Following' value={profile.followingCount} />\n                    </Statistic.Group>\n                    <Divider />\n                    <FollowButton profile={profile}/>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n    const {username} = useParams<{username: string}>();\n    const {profileStore} = useStore();\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\n\n    useEffect(() => {\n        loadProfile(username);\n        return () => {\n            setActiveTab(0);\n        }\n    }, [loadProfile, username, setActiveTab])\n\n    if (loadingProfile) return <LoadingComponent content='Loading profile...'/>\n\n    return (\n        <Grid>\n            <Grid.Column width={16}>\n                {profile && \n                    <>\n                        <ProfileHeader profile={profile}/>\n                        <ProfileContent profile={profile} />\n                    </>}\n            </Grid.Column>\n        </Grid>\n    )\n\n})","import React from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n    const {userStore: {isLoggedIn}} = useStore();\n\n    return (\n        <Route \n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport {Container} from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/activities/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestError from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  \n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n  \n  useEffect(() => {\n    if (commonStore.token){\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    }\n    else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n  \n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{marginTop: '7em'}}>         \n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestError} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n      \n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './app/layout/App';\nimport './app/layout/styles.css';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport {createBrowserHistory} from 'history';\nimport { BrowserRouter, Router } from 'react-router-dom';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App/>\n    </Router>\n  </StoreContext.Provider>\n   \n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}